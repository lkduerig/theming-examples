@mixin sprite-pseudo-element($map-name, $icon) {
  position: relative;
  &:before {
    //    background: sprite($map, $icon);
    position: absolute;
    content: "";
    @if $map-name == icons {
      @include icons-sprite($icon, TRUE);
    } @else if $map-name == large {
      @include large-sprite($icon, TRUE);
    } @else if $map-name == icons32 {
      @include icons32-sprite($icon, TRUE);
    }
  }
}

@mixin pseudo-sprite-inline($padding) {
  text-indent: $padding + $inline-padding;
  &:before {
    margin-left: ($padding + $inline-padding) * -1;
  }
}

$icons-spacing: 20px;
//$icons-position: 50%;
$icons-sprite-dimensions: true;
@import "icons/*.png";
$icons-map: sprite-map("icons/*.png");
@include all-icons-sprites;
// This is no longer good, generates too much CSS. Same as below. We should probably work with individual sprites


.block-menu .show-header-block {
  @include sprite-pseudo-element(icons, arrow-white-down);
  padding-right: icons-sprite-width(arrow-white-down) + 1;
  @include respond-to(normal) {
    padding-right: icons-sprite-width(arrow-white-down) + $inline-padding;
  }
  &:before {
    right: 0;
    margin-top: ($large-icon-size - icons-sprite-height(arrow-white-down)) / 2;
  }
}

$large-spacing: 20px;
$large-position: 50%;
@import "large/*.png";
@include all-large-sprites;

#tieto-lightbox .close span {
  @include large-sprite(overlay-close-white, true);
  @include hide-text;
}

span.toggle-nav, span.leaf {
  @include large-sprite(nav-collapsed-white, TRUE);
}

li.mobile-is-expanded > span.toggle-nav {
  @include large-sprite(nav-expanded-white);
}

#block-menu-menu-customer-area ul.menu li a {
  @include sprite-pseudo-element(large, nav-collapsed-white);
}

img.file-icon, div.file-widget img {
  @include large-sprite(file_blue, true);
  // Are the following necessary?
  height: sprite-icon-height(file_blue);
  width: 0;
  padding-left: sprite-icon-width(file_blue);
  overflow: hidden;
  vertical-align: bottom;
}

$icon32-spacing: 20px;
$icon32-position: 50%;
$icons32-map: sprite-map("icons32/*.png");
@import "icons32/*.png";
//@include all-icons32-sprites;


.block-menu-block .show-header-block {
  @include icons32-sprite(mobile_nav_w_32, TRUE);
}

#block-menu-menu-customer-area .show-header-block {
  @include icons32-sprite(user_w_32, TRUE);
}

#block-menu-menu-customer-area ul.menu {
  @include sprite-pseudo-element(icons32, user_w_32);
  &:before {
    display: none;
  }
  @include respond-to(normal) {
    @include pseudo-sprite-inline(icons32-sprite-width(user_w_32));
    text-indent: 0;
    &:before {
      display: block;
    }
  }
}

#block-menu-menu-tieto-worldwide .show-header-block {
  @include icons32-sprite(world_w_32, TRUE);
  @include respond-to(normal) {
    padding-left: icons32-sprite-width(world_w_32) + $inline-padding;
    width: auto;
  }
}

#block-search-form .show-header-block {
  @include icons32-sprite(search_w_32, TRUE);
  @include hide-text;
}

#block-search-form {
  .form-actions input {
    @include icons32-sprite(search_b_32, TRUE);
  }
}

.region-header a.home-link {
  @include sprite-pseudo-element(icons32, home_w_32);
  @include pseudo-sprite-inline(icons32-sprite-width(home_w_32));
//  text-indent: icons32-sprite-width(home_w_32) + $inline-padding;
}

%mobile-hidden-content-nav-sprite-icon {
  @include sprite-pseudo-element(icons32, mobile_nav_w_32);
  @include pseudo-sprite-inline(icons32-sprite-width(mobile_nav_w_32));
}

// Alternate blue color theme

@mixin blue-sprite-theme($breakpoint: all) {
  @include respond-to($breakpoint) {
      .block-menu .show-header-block {
//        @include sprite-pseudo-element(icons, arrow-blue-down);
      }

    .block-menu-block .show-header-block {
      @include sprite-background-position($icons32-map, mobile_nav_b_32);
    }

    #block-menu-menu-customer-area .show-header-block {
      @include sprite-background-position($icons32-map, user_b_32);
    }

    //  #block-menu-menu-customer-area ul.menu {
    //    @include sprite-pseudo-element(icons32, user_b_32);
    ////    &:before {
    ////      display: none;
    ////    }
    //    @include respond-to(normal) {
    //      @include pseudo-sprite-inline(icons32-sprite-width(user_b_32));
    ////      text-indent: 0;
    //      &:before {
    ////        display: block;
    //      }
    //    }
    //  }

    #block-menu-menu-tieto-worldwide .show-header-block {
      //@include sprite-background-position($icons32-map, world_b_32);
    }

    #block-search-form .show-header-block {
      @include sprite-background-position($icons32-map, search_b_32);
    }

    //  %mobile-hidden-content-nav-sprite-icon {
    //    @include sprite-pseudo-element(icons32, mobile_nav_b_32);
    //    @include pseudo-sprite-inline(icons32-sprite-width(mobile_nav_b_32));
    //  }
  }
}